version: '3'
services:
#  n ginx:
#    image: nginx
#    restart: always
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - ./docker/nginx/conf.d:/etc/nginx/conf.d
#  redis:
#    # 指定镜像
#    image: redis:3.2
#    ports:
#      # 端口映射
#      - 6379:6379
#    volumes:
#      # 目录映射
#      - "${REDIS_DIR}/conf:/usr/local/etc/redis"
#      - "${REDIS_DIR}/data:/data"
#    command:
#      # 执行的命令
#      redis-server
#
#  mysql:
#    container_name: v-mysql
#    image: mysql/mysql-server:5.7
#    environment:
#      MYSQL_DATABASE: test
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_ROOT_HOST: '%'
#    ports:
#      - "3306:3306"
#    restart: always

  b2b-db:
    image: java:8-jre
    restart: "always" #重启策略，能够使服务保持始终运行，生产环境推荐使用
    container_name: b2b-db
    volumes:
      - /root/compose_test/jdk/b2b-db-1.0.jar:/b2b-db-1.0.jar
    entrypoint: java -jar /b2b-db-1.0.jar
  b2b-common:
      image: java:8-jre
      restart: "always" #重启策略，能够使服务保持始终运行，生产环境推荐使用
      container_name: b2b-common
      volumes:
        - /root/compose_test/jdk/b2b-common-1.0.jar:/b2b-common-1.0.jar
      entrypoint: java -jar /b2b-common-1.0.jar
#      depends_on:
#        - nginx
#        - redis
  b2b-admin:
    image: java:8-jre
    restart: "always" #重启策略，能够使服务保持始终运行，生产环境推荐使用
    ports:
      - "8081:8081"
    container_name: b2b-admin
    volumes:
      - /root/compose_test/jdk/b2b-admin-1.0.jar:/b2b-admin-1.0.jar
    entrypoint: java -jar /b2b-admin-1.0.jar